* [x] Verificar pq ta Address maisculo no retorno da clinica
* [x] Criar teste e2e para invalidar o envio de imagens vazias
* [x] Criar teste e2e para invalidar o envio de imagens sem um service executado criado
* [x] Converter o retorno o price do service executado para number nas listagens
* [x] Arrumar o verify-role para que o acesso seja permitido quando for apenas ADMIN e quando for
ADMIN ou PACIENT.
* [x] Criar role SUPER
* [x] Criar table KEYS com id, idUser, key, createdAt.
* [x] Criar rota para apenas user SUPER gerar KEYS
* [x] Criar rota para que usuarios comum possa ganhar acesso de admin atravér da KEYS únicas
* [x] Corrigir retornos das entidade que com a primeira letra maiscula do relacionamento ex: Clinic, ServiceExecuted, Token
* [x] Corrigir tests unit e e2e depois das mudanças em usuário
* [x] Corrigir case com uso do storage do firebase
* [x] Remover o idCostumerAsaas em Payments
* [x] Alterar o idCostumer em users para idCostumerAsaas
* [x] Pegar remoteIp da requisição que foi enviada para o backend em vez de chumbar
* [x] Corrigir teste e2e que enviavam remoteIp pelo body.
* [x] Receber no controller event payment webhook apenas evento PAYMENT_RECEIVED e PAYMENT_REPROVED
* [x] Criar test e2e para list service executed by payment status
* [x] Criar test unit e e2e para validar user, clinic e service no service executed
* [ ] Receber do frontend valor total a ser pago parcelado com arredondamento e 2 casa depois da virgula
* [x] Receber token webhook pelo header da api Asaas na de events de patment.
* [x] Corrigir processo de logout adicionando token em uma blacklist dentro do redis para impedir o acesso ao backend
* [x] Colocar verificação no case do verify-email para impedir um email ja verificado
* [x] Adicionar lib cpf-cnpj-validator para validar o CPF 
* [x] Criar Blacklist de tokens usando o Redis com limpeza a cada 7 dias
* [x] Adcionar funcionalidade Logout
* [x] Criar campo discount coupon no controller do payment para receber os descontos
* [] Aplicar desconto no pagamento ao enviar para Asaas caso houver
* [ ] Criar campo discount in tabela payment para receber disconto aplicado no pagamento
* [x] Alterar todos os errors handlers para classe de erro AppError
* [x] Corrigir testes quebrados apos alteração da classe de erro
